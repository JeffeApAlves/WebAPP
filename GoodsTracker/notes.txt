******************************************************************
Serviços
******************************************************************

192.168.42.1:15672           web Adm RabbitMQ
192.168.42.1:1883            MQTT
192.168.42.1:3000            ntopng
192.168.42.1:8000            GoodsTracker
192.168.42.1/phpldapadmin/   Adm LDAP
192.168.42.1:5050            Adm POstgreSQL

******************************************************************
1. Criacao de ambientes python
******************************************************************

Referencia: 
https://pt.stackoverflow.com/questions/52/como-usar-o-virtualenv-para-gerenciar-as-depend%C3%AAncias-duma-aplica%C3%A7%C3%A3o-python
https://stackoverflow.com/questions/16123459/virtualenvwrapper-and-python-3

1.1 Instala a ferramenta
sudo pip install virtualenvwrapper

1.2. Adiciona o path
echo source /usr/local/bin/virtualenvwrapper.sh >> ~/.bashrc

1.3. Cria repositorio de ambientes

mkdir ~/.virtualenvs

1.4 Configura a variavel de ambiente 
echo 'export WORKON_HOME=$HOME/.virtualenvs' >> ~/.bashrc && . ~/.bashrc

1.5. Descobre a path da versao que se deseja
which pythonXX-->saida e a path

1.6 Cria o ambiente
mkvirtualenv --python=path nameOfEnvironment
lsvirtualenv - lista os ambientes 
rmvirtualenv  - remove ambiente

1. 7.Ativa o ambiente
workon nome_ambiente

******************************************************************
2. Aplicacao web (Django)
******************************************************************

2.1 pip install pgAdmin4 (instalado separado, pois nao esta no repositorio)

2.2 pip install -r requerements.txt

2.3. python /home/jefferson/WebAPP/GoodsTracker/manage.py runserver 192.168.42.1:8000

******************************************************************
3. Instalacao ferramenta de adm do banco de dados
******************************************************************

3.1 Configuração

sudo nano ~/.virtualenvs/gTracker/lib/python3.5/site-packages/pgadmin4/config.py

3.2 Rodando a ferramenta
python ../env/lib/python3.6/site-packages/pgadmin4/pgAdmin4.py

******************************************************************
4. Configuracao servidor postgres
******************************************************************

4.1 Verificar banco
    psql -h HOST -U USUARIODOBANCO -W
    SELECT version();

4.1 Configuracao do ip  e porta do servifor 
sudo nano /etc/postgresql/9.6/main/postgresql.conf

4.2. Configuracao forma de acesso dos usuarios
sudo nano /etc/postgresql/9.6/main/pg_hba.conf

4.3 Criacao de usuario banco de dados

    psql -h 192.168.42.1 -U postgres -W

    CREATE USER nomedousuario SUPERUSER INHERIT CREATEDB CREATEROLE;
    ALTER USER my_user_name with password 'my_secure_password';
    ALTER USER nomedousuario PASSWORD 'senha';
4.4 nano /var/log/postgresql/postgresql-9.6-main.log

4.5 Firewall

    sudo iptables -t nat -S
    sudo iptables -S

    iptables -A INPUT -p tcp -s 0/0 --sport 1024:65535 -d 192.168.42.1  --dport 5432 -m state --state NEW,ESTABLISHED -j ACCEPT
    iptables -A OUTPUT -p tcp -s 192.168.42.1 --sport 5432 -d 0/0 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT

    sudo sh -c "iptables-save > /etc/iptables.ipv4.nat"



******************************************************************
5. Cmds 
******************************************************************

5.1. Verifica quais servicos e em quais portas estão escutando
    netstat -atp tcp | grep -i "listen"

5.2 Verifica o status do servico
    sudo service postgresql status/start/stop/restart


5.3 lista  quem esta usando a porta
    sudo fuser 80/tcp

5.4 Verifica as portas
    sudo nmap 192.168.42.1


******************************************************************
6. LDAP
******************************************************************

sudo nano /etc/phpldapadmin/config.php

editar o arquivo
sudo nano /etc/apache2/apache2.conf

colocando no final 'Include /etc/phpmyadmin/apache.conf'


******************************************************************
7. Ntopng
******************************************************************

7.1 Apagar senha
    redis-cli ping

    echo -n "opensesame" | md5sum 

    redis-cli SET user.admin.password ea847988ba59727dbf4e34ee75726dc3