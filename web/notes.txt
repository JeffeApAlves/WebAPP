Conteudo para estruturação e elaboração da apresentação

******************************************************************
1. Ambiente virtual Python (virtualenvwrapper)
******************************************************************

    1.1 Instalar a ferramenta de gerenciamento de ambieentes python
    sudo pip install virtualenvwrapper

    1.2. Adiciona o path de repositorios de ambientes
    echo source /usr/local/bin/virtualenvwrapper.sh >> ~/.bashrc

    1.3. Cria repositorio de ambientes

    mkdir ~/.virtualenvs

    1.4 Cria e configura a variavel de ambiente 
    echo 'export WORKON_HOME=$HOME/.virtualenvs' >> ~/.bashrc && . ~/.bashrc

    1.5. Descobre a path da versao que se deseja
    which pythonXX-->saida e a path

    1.6 Cria o ambiente
    mkvirtualenv --python=path nameOfEnvironment
    lsvirtualenv - lista os ambientes 
    rmvirtualenv  - remove ambiente
    cpvirtualenv copia

    1. 7.Ativa o ambiente
    workon nome_ambiente

    1.8.Python 2.7 (Qunado necessaŕio)
    Selecionar atraves do sudo update-alternatives --config python

Referencias: 
    https://pt.stackoverflow.com/questions/52/como-usar-o-virtualenv-para-gerenciar-as-depend%C3%AAncias-duma-aplica%C3%A7%C3%A3o-python
    https://stackoverflow.com/questions/16123459/virtualenvwrapper-and-python-3


******************************************************************
2. Framework web (Django)
******************************************************************

    2.1 pip install -r requerements.txt + pgAdmin4 (instalado separado, pois nao esta no repositorio)

    2.2. python /home/jefferson/WebAPP/GoodsTracker/manage.py runserver 192.168.42.1:8010


******************************************************************
3. Instalacao ferramenta de adm do banco de dados(Postfres)
******************************************************************

    3.1 Configuração

    sudo nano ~/.virtualenvs/gTracker/lib/python3.5/site-packages/pgadmin4/config.py

    3.2 Rodando a ferramenta de gerenciamento 
    python ../env/lib/python3.6/site-packages/pgadmin4/pgAdmin4.py

******************************************************************
4. Banco de dados (postgres)
******************************************************************

    4.1 Verificar banco
        psql -h HOST -U USUARIODOBANCO -W
        SELECT version();

    4.1 Configuracao do ip  e porta do servifor 
        sudo nano /etc/postgresql/9.6/main/postgresql.conf

    4.2. Configuracao forma de acesso dos usuarios
        sudo nano /etc/postgresql/9.6/main/pg_hba.conf

    4.3 Criacao de usuario banco de dados

        psql -h 192.168.42.1 -U postgres -W

        CREATE USER nomedousuario SUPERUSER INHERIT CREATEDB CREATEROLE;
        ALTER USER my_user_name with password 'my_secure_password';
        ALTER USER nomedousuario PASSWORD 'senha';

    4.4 nano /var/log/postgresql/postgresql-9.6-main.log

******************************************************************
5. Broker (RabbitMQ)
******************************************************************

    5.1 Erlang

******************************************************************
6. Identificação/autorização (LDAP)
******************************************************************
    Autenticação e politica de acesso

    sudo nano /etc/phpldapadmin/config.php

    editar o arquivo
    sudo nano /etc/apache2/apache2.conf

    colocando no final 'Include /etc/phpmyadmin/apache.conf'

******************************************************************
7. Ntopng
******************************************************************

7.1 Apagar senha

    Teste
    redis-cli ping

    echo -n "opensesame" | md5sum 

    redis-cli SET user.admin.password ea847988ba59727dbf4e34ee75726dc3


******************************************************************
8. DHCP (isc-dhcp-server)
******************************************************************

    sudo nano /etc/dhcpcd.conf

******************************************************************
9. Access point (hostapd)
******************************************************************

    9.1 sudo nano /etc/hostapd/hostapd.conf

    9.2 sudo nano /etc/sysctl.conf
        net.ipv4.ip_forward=1

    9.3 sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"


******************************************************************
10. DNS
******************************************************************

Testando DNS

    sudo apt install namebench

    execução: namebench

******************************************************************
11. Firewall (iptables)
******************************************************************

    11.1 Regras

        Regras para o Acess point    
        sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
        sudo iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
        sudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT

        Regras para o postgres
        sudo iptables -A INPUT -p tcp -s 0/0 --sport 1024:65535 -d 192.168.42.1  --dport 5432 -m state --state NEW,ESTABLISHED -j ACCEPT
        sudo iptables -A OUTPUT -p tcp -s 192.168.42.1 --sport 5432 -d 0/0 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT

    11.2 Verificando
        sudo iptables -t nat -S
        sudo iptables -S

    11.3 Salvando 
        sudo sh -c "iptables-save > /etc/iptables.ipv4.nat"

******************************************************************
12. Daphne
******************************************************************

    13.1 Instalacao:
        pip install daphne

******************************************************************
13. Nginx
******************************************************************

    13.1 Instalacao:
            sudo aptitude install nginx

    coletar do projeto os arquivos estaticos para que o nginx possa servi-lo
        python manage.py collectstatic

    Configuracao nginx
        sudo nano /etc/nginx/sites-available/gtracker.conf
        Colocar um link simbolico em sites-enable para rodar o site 

    Usando o arquivo ja existente
        sudo nano /lib/systemd/system/nginx.service

    Script de inicialização
        sudo nano /var/www/gTracker/gtracker_start.sh

    ?????
    Recarregar o servicos
        sudo systemctl daemon-reload

******************************************************************
14. Supervisor
******************************************************************

    Editar arquivo /etc/supervisor/supervisord.conf,
    Excluir comentario da linha 
    files = /etc/supervisor/conf.d/*.conf
    Obs: Um segundo include feito apos essa linha provocou o nao aparecimento dos apps disponiveis

    Criar o arquivo de  Configuração 
    sudo nano  /etc/supervisor/conf.d/gtracker.conf
    sudo nano  /etc/supervisor/conf.d/daphne.conf


    Verifica os arquivos conf e start com as novas configurações
    sudo supervisorctl reread
    sudo supervisorctl update

    Comando possiveis
    sudo supervisorctl <cmd> <app> cmd = status | stop | start | restart

******************************************************************
15. Gerenciamento de servicos
******************************************************************

    Para visualizar o nome da
    sudo aptitude install python-dev
    pip install setproctitle


    15.1 utilitario visualizar servicos  
    http://www.bosontreinamentos.com.br/linux/16-inicializacao-init-runlevels-init-d-inittab-e-telinit-linux/
    apt-get install sysv-rc-conf
    sysv-rc-conf

    15.2 Verifica o status de um servico
        sudo service postgresql status/start/stop/restart

    15.5 servicos
        ps axf

******************************************************************
16. Verificação de portas 
******************************************************************

    16.1. Verifica quais portas estão escutando
        netstat -atp tcp | grep -i "listen"


    16.2 lista  quem esta usando a porta
        sudo fuser 80/tcp

    16.3 Verifica as portas
        sudo nmap 192.168.42.1

    16.4
        ss -tnlp 

******************************************************************
17. Usuario/grupo da aplicação
******************************************************************

    sudo groupadd --system webapps
    sudo useradd --system --gid webapps --shell /bin/bash gtracker
    sudo usermod -a -G users gtracker
    sudo chown -R gtracker:users /var/www/gtracker/
    sudo chmod -R g+w /var/www/gtracker

******************************************************************
18. gunicorn ou uwsgi

******************************************************************

    pip install gunicorn

    Criação do script de incialização da WebAPP

    sudo nano /var/www/gtracker/app_start.sh

    kill -HUP sudo kill -HUP `cat /tmp/web_django.pid`

Referencias:
    http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/
    http://tutos.readthedocs.io/en/latest/source/ndg.html
    http://pythonclub.com.br/configurando-um-servidor-de-producao-para-aplicacoes-python.html
    http://docs.gunicorn.org/en/latest/run.html
    https://www.youtube.com/watch?v=G1U6rQa8x1s
    http://uwsgi-docs.readthedocs.io/en/latest/Nginx.html

******************************************************************
19 .IDES e editores 
******************************************************************
    
    19.1 Editores 
    VS Code for linux, nano
    
    19.2 IDEs
    MCUXPresso,Eclipse

******************************************************************
20. OpenOCD
******************************************************************

    Server para clientes gdb. Rodando na raspberry pi 0, transformandoa em uma adapter jtag.
    É possivel configurar a interface de uso. no caso foi configurado de forma a utilizar o GPIOS da própria rb.

    20.1. Configuração openocd: 
          http://esp-idf.readthedocs.io/en/latest/api-guides/jtag-debugging/tips-and-quirks.html#jtag-debugging-tip-openocd-configure-target


    20.1. Configurar a interface
     5.1 O arquivo de configuração da interface se enontra na rasp em /usr/local/share/openocd/scripts/interface/raspberrypi-native.cfg
        Configurar:
           bcm2835gpio_trst_num 7
           adapter_khz 20000

    20.2 As variaveis de ambinete serao colocadas no arquivo ~/.profile
       export PATH=$PATH:$HOME/esp/xtensa-esp32-elf/bin
       export IDF_PATH=~/esp/esp-idf

******************************************************************
21. ESP32
******************************************************************

    O toolchain possui um gdb client 

    21.1. Instalação e configuração do toolchains

    21.2. Instalação do SDK
        Espressif idf-esp
        git clone https://github.com/espressif/esp-idf.git
          
    B) Paths do git e toolchains e comandos estão baseados nesse documento: 
        http://esp-idf.readthedocs.io/en/latest/get-started/
    C) Configuração toolchain
        https://esp-idf.readthedocs.io/en/v2.0/linux-setup.html

******************************************************************
22. FreeRTOS
******************************************************************

******************************************************************
23. SUMO

    23.1 tools
    Adionar a variavel de ambiente SUMO_HOME = path do sumo

    23.2    Tools
    osmBuild.py - executa o netconver e o polyconvert
    osmGet - download do map
    sumo-gui execução a simulação com o modo gráfico habilitado
    sumo simulação sem o modo gráfico
    netconvert converte mapas(osm,...) para o formato sumo
    polyconvert converte os poligonos do mapa para o formato sumo
    netedt -  editor de net.xml (formato sumo)

******************************************************************

******************************************************************
24. omnet++
******************************************************************

    24.1 Instalação
    https://omnetpp.org/doc/omnetpp/InstallGuide.pdf

    24.2 Executando a IDE
    omnetpp

******************************************************************
25. Rede
******************************************************************

    23.1 Teste de DNS
    namebench

    23.2 Sniffer
    wireshark
  
    23.3 Ports
        Verificar o arquivo /etc/hosts

        192.168.42.1:15672                                                  web Adm RabbitMQ
        192.168.42.1:1883                                                   MQTT
        192.168.42.1:3000                                                   ntopng
        192.168.42.1:8000                                                   gtracker.com
        192.168.42.1:8020           /var/www/gtracker/run/daphne.sock       Daphne
        192.168.42.1:8010           /var/www/gtracker/run/gtracker.sock     uwsgi
        192.168.42.1:5432                                                   gtracker-data
        192.168.42.1/phpldapadmin/                                          Adm LDAP

******************************************************************
26 JOSM
******************************************************************

    26.1 Instalação editor de java OSM editor
    https://josm.openstreetmap.de/wiki/Download

******************************************************************
27. Misc
******************************************************************

    27.1 mc -File explorer para linux na linha de comando:

28. OpenMapStreet

    Base cartografica aberta onde é possivel exportar um xml no formato osm. Esse arquivo é usado como entrada para o netconvert. 
    Obtendo como sáida um xml(net.xml) no formato sumo